server {
    listen {{ web_port }} default_server;
    listen [::]:{{ web_port }} default_server;
    
    # Redirect HTTP to HTTPS
{% if enable_web_ssl | default(true) %}
    server_name {{ web_server_name }};
    return 301 https://$host$request_uri;
}

server {
    listen {{ web_ssl_port }} ssl http2;
    listen [::]:{{ web_ssl_port }} ssl http2;
{% endif %}
    
    server_name {{ web_server_name }};
    root {{ web_document_root }};
    index index.html index.htm;

{% if enable_web_ssl | default(true) %}
    # SSL Konfiguration
    ssl_certificate /etc/ssl/certs/{{ web_server_name }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ web_server_name }}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
{% endif %}

    # Security Headers
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; object-src 'none'";
    add_header Referrer-Policy "no-referrer-when-downgrade";
{% if enable_web_ssl | default(true) %}
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
{% endif %}

    location / {
        try_files $uri $uri/ =404;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 